name: CI

on:
  push:

jobs:
  build:
    name: Build executables
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        os: [darwin, linux, windows]
        arch: [amd64, 386]
        exclude:
          - os: darwin
            arch: 386
    env:
      OS: ${{ matrix.os }}
      ARCH: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.15'

      - name: Caching executables
        uses: actions/cache@v2
        with:
          path: |
            build/
          key: ${{ github.sha }}-${{ matrix.os }}-${{ matrix.arch }}

      - name: Setting version from git
        id: get_version
        run: bin/set-version-ci.sh

      - run: make build
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}

  upload-release-assets:
    name: Upload executables to release
    needs: [create-release]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [darwin, linux, windows]
        arch: [amd64, 386]
        exclude:
          - os: darwin
            arch: 386
    env:
      OS: ${{ matrix.os }}
      ARCH: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v2
      - name: Retrieving cached executables
        uses: actions/cache@v2
        with:
          path: |
            build/
          key: ${{ github.sha }}-${{ matrix.os }}-${{ matrix.arch }}

      - name: Setting version from git
        id: get_version
        run: bin/set-version-ci.sh

      - name: Publishing executables to release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/terraform-provider-segment_${{ steps.get_version.outputs.VERSION }}_${{ matrix.os }}_${{ matrix.arch }}
